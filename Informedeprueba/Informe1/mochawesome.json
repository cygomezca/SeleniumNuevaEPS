{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 2,
    "pending": 0,
    "failures": 1,
    "start": "2022-09-03T03:44:05.453Z",
    "end": "2022-09-03T03:44:16.817Z",
    "duration": 11364,
    "testsRegistered": 3,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "845a7658-90ac-49ec-81d3-7c0b0cc3616d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f64b7bfe-cc2d-4973-9a24-4ba638047ada",
          "title": "add todo tests",
          "fullFile": "C:\\Users\\USUARIO\\Documents\\GitHub\\seleniumDemo\\test\\firstTest.js",
          "file": "\\test\\firstTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds a todo to application",
              "fullTitle": "add todo tests successfully adds a todo to application",
              "timedOut": null,
              "duration": 7000,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//launch the browser\nlet driver = await new Builder().forBrowser(\"firefox\").build();\n\n//navigate to our application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\")\n//add a todo\nawait driver\n.findElement(By.id(\"sampletodotext\"))\n.sendKeys(\"Learn Selenium\", Key.RETURN);\n//assert\nlet todoText = await driver\n.findElement(By.xpath(\"//li[last()]\"))\n.getText().then(function(value){\n    return value\n});\n\n//assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\n//close the browser\nawait driver.quit();",
              "err": {},
              "uuid": "3a5db400-3aa5-43e4-ad7c-797801cc933f",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3a5db400-3aa5-43e4-ad7c-797801cc933f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 7000,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        },
        {
          "uuid": "3e56d88f-ae59-4d0c-beda-fea756c9848f",
          "title": "add another todo tests",
          "fullFile": "C:\\Users\\USUARIO\\Documents\\GitHub\\seleniumDemo\\test\\secondTest.js",
          "file": "\\test\\secondTest.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "successfully adds another a todo to application",
              "fullTitle": "add another todo tests successfully adds another a todo to application",
              "timedOut": null,
              "duration": 7022,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//launch the browser\nlet driver = await new Builder().forBrowser(\"firefox\").build();\n\n//navigate to our application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\")\n//add a todo\nawait driver\n.findElement(By.id(\"sampletodotext\"))\n.sendKeys(\"Learn Selenium\", Key.RETURN);\n//assert\nlet todoText = await driver\n.findElement(By.xpath(\"//li[last()]\"))\n.getText().then(function(value){\n    return value\n});\n\n//assert using chai should\ntodoText.should.equal(\"Learn Selenium\");\n//close the browser\nawait driver.quit();",
              "err": {},
              "uuid": "4d14c0f7-974b-499b-be6a-a59f19988672",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Adding a new test reporting",
              "fullTitle": "add another todo tests Adding a new test reporting",
              "timedOut": null,
              "duration": 3654,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//launch the browser\nlet driver = await new Builder().forBrowser(\"firefox\").build();\n    \n    \n//navigate to our application\nawait driver.get(\"https://lambdatest.github.io/sample-todo-app/\")\n    \n//add a todo\nawait driver\n.findElement(By.id(\"sampletodotext\"))\n.sendKeys(\"Learn Selenium\", Key.RETURN);\n    \n//assert\nlet todoText = await driver\n.findElement(By.xpath(\"//li[last()]\"))\n.getText().then(function(value){\n    return value\n});\n    \n    \n//assert using chai should\ntodoText.should.equal(\"Learn JavaScript\");\n    \n//close the browser\nawait driver.quit();",
              "err": {
                "message": "AssertionError: expected 'Learn Selenium' to equal 'Learn JavaScript'",
                "estack": "AssertionError: expected 'Learn Selenium' to equal 'Learn JavaScript'\n    at Context.<anonymous> (test\\secondTest.js:60:25)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- Learn Selenium\n+ Learn JavaScript\n"
              },
              "uuid": "618b5c6e-9d21-4c83-9a90-72c451221ad0",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4d14c0f7-974b-499b-be6a-a59f19988672"
          ],
          "failures": [
            "618b5c6e-9d21-4c83-9a90-72c451221ad0"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10676,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "Informedeprueba/Informe1"
      },
      "version": "6.2.0"
    }
  }
}